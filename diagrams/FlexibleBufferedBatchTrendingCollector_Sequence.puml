@startuml
title "FlexibleBufferedBatchTrendingCollector Sequence Diagram (Clarity on Exception)"

actor "Caller" as caller
participant "collector: FlexibleBufferedBatchTrendingCollector" as collector
participant "api: YoutubeDataApiCaller" as api
participant "buffer: FlexibleTrendingBuffer" as buffer
participant "videoCollector: BatchVideoCollector" as videoCollector
participant "creator: TrendingCreator" as creator

caller -> collector : collect(dateTime, collectSize, regionCodes)
activate collector

loop for each regionCode
    note right of collector
        Fetches trending videos page by page
        until 'collectSize' is reached.
        (Approx. collectSize / 50 API calls per region)
    end note
    collector -> collector : fetchTrendings(collectSize, regionCode)
    activate collector
    loop while remainCollectCount > 0
        collector -> api : fetchTrendings(maxResultCount, regionCode, pageToken)
        activate api
        api --> collector : trendingListResponse
        deactivate api
    end
    collector --> collector : trendingVideoResponses
    deactivate collector

    loop for each trendingVideoResponse
        collector -> buffer : pushTrendingItem(trendingItem)
        activate buffer
        buffer --> collector
        deactivate buffer
    end
end

collector -> buffer : pollTrendingItems(count)
activate buffer
buffer --> collector : polledTrendingItems
deactivate buffer

collector -> videoCollector : collect(videoYoutubeIds from polledItems)
activate videoCollector
videoCollector --> collector
deactivate videoCollector

collector -> collector : storeFromTrendingItems(polledTrendingItems)
activate collector
loop for each trendingItem in polledTrendingItems
    group try [Create Trending Record]
        collector -> creator : create(dateTime, videoId, rank, regionCode)
        activate creator
        creator --> collector
        deactivate creator
    else catch [VideoNotFoundException]
        note over collector : Log exception and continue loop
    end
end
collector --> collector : storedCount
deactivate collector

collector --> caller : storedCount
deactivate collector

@enduml