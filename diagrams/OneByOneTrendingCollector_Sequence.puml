@startuml
title "OneByOneTrendingCollector Sequence Diagram (Latest Code Applied)"

actor "Caller" as caller
participant "collector: OneByOneTrendingCollector" as collector
participant "api: YoutubeDataApiCaller" as api
participant "videoCollector: OneByOneVideoCollector" as videoCollector
participant "creator: TrendingCreator" as creator

caller -> collector : collect(dateTime, collectSize, regionCodes)
activate collector

loop for each regionCode
    note right of collector
        Fetches trending videos one by one
        until 'collectSize' is reached or no more pages are available.
    end note
    loop while pageToken != null && collectSize > 0
        collector -> api : fetchTrendings(1, regionCode, pageToken)
        activate api
        api --> collector : trendingListResponse
        deactivate api
    end

    collector -> videoCollector : collect(trendingVideoYoutubeIds)
    activate videoCollector
    videoCollector --> collector
    deactivate videoCollector

    loop for each trendingVideoResponse
        group try [Create Trending Record]
            collector -> creator : create(dateTime, videoYoutubeId, rank, regionCode)
            activate creator
            creator --> collector
            deactivate creator
        else catch [VideoNotFoundException]
            note over collector : Log exception and continue loop
        end
    end
end

collector --> caller : collectedCount
deactivate collector

@enduml